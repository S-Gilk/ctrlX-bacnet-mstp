name: ctrlx-bacnet-mstp
base: core22
version: "0.1"
summary: BACnet MS/TP datalayer interface
description: |
  ctrlX Data Layer node provider for BACnet MS/TP devices

grade: stable
confinement: strict

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]

apps:
  provider:
    daemon: simple
    command: bin/main.py
    plugs:
      - network
      - datalayer
      - network-bind
      - serial-port
      - raw-usb
      - active-solution
    slots:
      - package-assets
    restart-condition: always
    passthrough:
      restart-delay: 10s

parts:
  # ctrlX provider (Python app + deps)
  provider:
    plugin: python
    source: ./provider-source
    stage-packages:
      - ctrlx-datalayer

  # Misty libs
  misty:
    plugin: python
    source: ./misty
    build-packages:
      - build-essential
      - python3-dev
    #   - make
    # build-attributes: [no-patchelf]
    # override-pull: |
    #   set -eux
    #   snapcraftctl pull
    #   # ensure no prebuilt/foreign .so sneaks in
    #   find "$SNAPCRAFT_PART_SRC" -name 'libmstp_agent_linux.so' -delete || true
    # override-build: |
    #   set -eux

    #   # 1) Let the python plugin install Misty (may or may not include the .so)
    #   snapcraftctl build

    #   # 2) If the .so isn't in site-packages yet, build it and install it there
    #   PYV=3.10  # core22
    #   TARGET="$SNAPCRAFT_PART_INSTALL/usr/lib/python${PYV}/site-packages/misty/mstplib/libmstp_agent_linux.so"
    #   if [ ! -f "$TARGET" ]; then
    #     echo "MSTP agent missing after pip install â€” building via make and installing..."
    #     # prefer source dir; fall back to build dir
    #     SRC_DIR="$SNAPCRAFT_PART_SRC/misty/mstplib"
    #     [ -d "$SRC_DIR" ] || SRC_DIR="$SNAPCRAFT_PART_BUILD/misty/mstplib"

    #     make -C "$SRC_DIR" clean || true
    #     make -C "$SRC_DIR"

    #     install -Dm644 "$SRC_DIR/libmstp_agent_linux.so" "$TARGET"
    #   fi

    #   # 3) Show what we installed (handy in logs)
    #   ls -l "$TARGET" || true
    #   file "$TARGET" || true

    # Prevent duplicate package staging
    stage:
      - -lib/python3.10/site-packages/pip*
      - -lib/python3.10/site-packages/wheel*
      - -lib/python3.10/site-packages/setuptools/
      - -lib/python3.10/site-packages/_distutils_hack
      - -lib/python3.10/site-packages/pkg_resources
      - -bin/activate
      - -bin/activate.csh
      - -bin/activate.fish
      - -pyvenv.cfg

  # Ship default configs
  config:
    plugin: dump
    source: ./config
    organize:
      'package-assets/*': package-assets/${CRAFT_PROJECT_NAME}/

slots:
  package-assets:
    interface: content
    content: package-assets
    source:
      read:
        - $SNAP/package-assets/${CRAFT_PROJECT_NAME}

plugs:
  datalayer:
    interface: content
    content: datalayer
    target: $SNAP_DATA/.datalayer

  active-solution:
    interface: content
    content: solutions
    target: $SNAP_COMMON/solutions

lint:
  ignore:
    - library:
      - usr/lib/aarch64-linux-gnu/libcomm_datalayer.so.*
      - usr/lib/x86_64-linux-gnu/libcomm_datalayer.so.*